mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
shiny::runApp('shiny/quixqest5')
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
head(airquality)
}
?cars
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
?abline
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
?head
head(airquality)
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
airquality
dTable(airquality, sPaginationType = "full_numbers")
airquality[10]
airquality[10,10,10,10,10,10,10]
?search dataset
?dataset
? load dataset
z<-rep(true,2)
z<-rep(TRUE,2)
MODE(Z)
mode(z)
w<-c(5,7,"dog",9)
mode(w)
x<-c("one"=1,"two"=2,"three"=3)
x
y<-1:2
names(y)=C("kvs","swetha")
names(y)<-C("kvs","swetha")
names(x)<-C("one","two","three")
x<-1:3
names(x)<-C("one","two","three")
names(x) <- C("one","two","three")
names(x) <- c("one","two","three")
x
names(x) <- c("kvs","valli","swetha")
x
names(x)[c(1,2)]<-c("a","b")
x
mat<-matrix(1:6,mrow=2,ncol=3)
mat<-matrix(1:6,nrow=2,ncol=3)
mat
mat<-matrix(1:6,nrow=2,ncol=3 dimnames=c("a","b","c"))
mat<-matrix(1:6,nrow=2,ncol=3 dimnames=list(NULL,c("a","b","c"))
mat<-matrix(1:6,nrow=2,ncol=3, dimnames=list(NULL,c("a","b","c"))
)
mat
- Bullet 1
install.packages("knitr")
library("knitr", lib.loc="C:/Program Files/R/R-3.1.1/library")
- Bullet 1
?slidify
install_github('slidify','ramnathv')
install_github('slidify','ramnathv')
install.packages("slidify")
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
install_github('slidifyLibraries','ramnathv')
install_github('slidifyLibraries','ramnathv')
library(manipulate)
manipulate(plot(1:x),x=slider(1,100))
shiny::runApp('shiny/Appslider')
shiny::runApp('shiny/Appradio')
library("devtools", lib.loc="C:/Program Files/R/R-3.1.1/library")
install.packages("Rtools")
install.packages("rtools")
install_githud('slidify','ramnathv')
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
install_github('slidifyLibraries','ramnathv')
library(devtools)
install( Rtools 3.1)
install( 'Rtools 3.1')
install.packages("rtools")
install.packages("rtools 3.1")
find_rtools(T)
install.packages("E:/download/Rtools31.exe", repos = NULL)
install.packages(c("Rtools", "3.1"))
install.packages(c("Rtools", "3.0"))
install.packages(c("Rtools", "31"))
detach("package:datasets", unload=TRUE)
detach("package:devtools", unload=TRUE)
library("devtools", lib.loc="C:/Program Files/R/R-3.1.1/library")
find_rtools()
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibrary','ramnathv')
install_github('slidifyLibraries', 'ramnathv')
?eval
shiny::runApp('shiny/Appslider')
shiny::runApp('shiny/diabetesprediction')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
run('appraio')
run('shiny/appradio')
runApp('shiny/appradio')
runApp('shiny/appradio',show)
?debug
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
shiny::runApp('shiny/Appradio')
?describe
?correclation
sugarvalues=c(c(10,20,30),c(80,90,85))
lm(sugarvalues)
lm(x,~y,sugarvalues)
sugarvalues=c(age=c(10,20,30),values=c(80,90,85))
lm(age~value,sugarvalues)
fit<-lm(x~y,sugarvalues)
fit<-lm(age~value,sugarvalues)
w=1+x^2
w<-1+x^2
?head
?head
summary(sugarvalues)
predict(mod, data.frame(train_x = c(1, 2, 3)))
x=c(1,2,3,4,5)
y=X^2
y= x*x
plot(x~Y)
plot(x~y)
fit(x~y)
fit=lm(x~y)
cor(x~y)
z=cor(x~y)
z=cor(x,y)
z=lm(x~y)
z$coefficients
x1=3
y1=1.23+0.3*x
y1=1.23+0.3*x1
help(predict.lm)
shiny::runApp('shiny/Appproject1')
generalbmi=c(c('severely underweight','under weight','normal','overweight','obese class 1','obese class 2','obewse class3'),c(c(0:15),c(15:16),c(16:18.5),c(18.5:25),c(25:30),c(30:35),c(35:40),c(40:100))
genbmi=
c(c('severely underweight','under weight','normal','overweight','obese cl 1','obese cl2','obewse cl3'),
c(c(0:16),c(16:18.5),c(18.5:25),c(25:30),c(30:35),c(35:40),c(40:100))
hist(genbmi)
genbmi=
c(c('normal','overweight'),
c(c(25:30),c(30:60))
hist(genbmi)
c(c('normal','overweight'), c(25,30)
hist(genbmi)
genbmi=
c(c('normal','overweight'), c(25,30)
hist(genbmi)
genbmi=   c(c('normal','overweight'), c(25,30)
hist(genbmi)
genbmi=   c(c(x,y),c(50,60))
hist(genbmi)
hist('genbmi')
x=  c(x,y)
y=c(10:50,50:60)
plot(x ,y)
x=  c('normal','obese')
y=c(10:50,50:60)
plot(x ,y)
x=  c('normal','obese')
y=c(10,50)
plot(x ,y)
x=  c('normal','obese')
y = c(10,50)
hist(x ,y)
z=(x,y)
name=c("x","y")
mark=c(35,40)
sht=c(name,mark)
hist(sht)
hist(x = mark)
hist(x = mark,xlab = name)
hist(x = sht)
hist(labels = name,x = mark)
barplot(sht)
barplot(20,30,52)
hist(12,10,50)
hist(c('x','y','z'),c(12,10,50))
barplot(c('x','y','z'),c(12,10,50))
data=(c('x','y','z'),c(12,10,50))
data=c(c('x','y','z'),c(12,10,50))
plot(data)
Hist(data)
barplot(data)
barplot(data[,1],
main=data,
ylab="Number of Telephones",
xlab="Year")
barplot(data[,0],
main=data,
ylab="Number of Telephones",
xlab="Year")
plot(data)
plot(xlab = name,main = data)
plot(xlab = name,x = data[,1],y = data[,2],type = bar)
plot(xlab = name,x = data[,0],y = data[,1],type = bar)
data[,1]
data[1]
data[2]
dataset(x,y)
?dataset
data <- c(1.22,-0.86,-1.35,-1.46,0.67,2.77,-0.50,0.34,-0.57,-0.05)
mean(data)
var(data)
plot(data)
plot(sort(data))
hist(data)
galton
?galton
?galton$child
barplot(c(12,13,18))
barplot(c(happy->12,unhappy->13))
barplot(c("happy"->12,"unhappy"->13))
table(c('happy','unhappy'),c(30,20))
barplot(table)
y=table(c('happy','unhappy'),c(30,20))
barplot(y)
levels(y)
levels(x = ~y)
table(taits$eyes)
table(traits$eyes)
table(traits$eyes)=C(c('blue','brown','green'),c(7,15,6))
table(traits$eyes)=c(c('blue','brown','green'),c(7,15,6))
traits$eyes=c(c('blue','brown','green'),c(7,15,6))
eyes=c(c('blue','brown','green'),c(7,15,6))
barplot(eyes)
eyes=table(c('blue','brown','green'),c(7,15,6))
barplot(eyes)
barplot(table(eyes)
)
barplot(table(eyes))
barplot(table(eyes),xlab = "eyes")
barplot(table(traits$eyes),xlab = "eyes")
barplot(table(eyes))
eyes=table(('blue','brown','green'),(7,15,6))
eyes=table(c('blue','brown','green'))
eyes[,1]
eyes[,0]
eyes[]
eyes[2]
eyes[2]=15
eyes[]
eyes[1]=7
eyes[3]=6
eyes[]
barplot(eyes)
eyes=table(('blue'=>1,'brown'=>13,'green'=>14))
eyes=table(('blue'->1,'brown'->13,'green'->14))
eyes=table(('blue'=1,'brown'=13,'green'=14))
eyes=table('blue'=1,'brown'=13,'green'=14)
eyes
barplot(eyes)
eyes=table(c('blue'=1,'brown'=13,'green'=14)
)
barplot(eyes)
eyes=table(c('blue','brown','green'))
barplot(eyes)
eyes=table(c('blue','brown','green'),c(15,16,19))
barplot(eyes)
bmirange <- read.table("C:/Users/KVS/Desktop/bmirange.xlsx", header=TRUE, quote="\"")
View(bmirange)
bmirange <- read.csv("C:/Users/KVS/Desktop/bmirange.csv")
View(bmirange)
plot(bmirange)
barplot(bmirange)
barplot(bmirange,1)
barplot(bmirange,[1])
bmirange[1]
bmirange[2]
bmirange[3]
plot(bmirange[1]~bmirange[3])
hist(bmirange[1])
hist(bmirange)
barplot(bmirange)
table(bmirange,exclude = 4)
plot(table)
table(bmirange)
shiny::runApp('shiny/Appproject1')
shiny::runApp('shiny/Appproject1')
shiny::runApp('shiny/Appproject1')
shiny::runApp('shiny/Appproject1')
shiny::runApp('shiny/Appproject1')
shinyapps::setAccountInfo(name='kvsatyam', token='12322968769BEAD7C4AB5C65384F364B', secret='/xxyEx014DqvqLZSdhF7cxwV2TFotUqFyYEgeVZ3')
library("shiny", lib.loc="C:/Program Files/R/R-3.1.1/library")
shinyapps::setAccountInfo(name='kvsatyam', token='12322968769BEAD7C4AB5C65384F364B', secret='/xxyEx014DqvqLZSdhF7cxwV2TFotUqFyYEgeVZ3')
library("devtools", lib.loc="C:/Program Files/R/R-3.1.1/library")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shiny::runApp('shiny/Appproject1')
shiny::runApp('shiny/Appproject1')
shinyapps::setAccountInfo(name='kvsatyam', token='12322968769BEAD7C4AB5C65384F364B', secret='/xxyEx014DqvqLZSdhF7cxwV2TFotUqFyYEgeVZ3')
shinyapps::setAccountInfo(name='kvsatyam', token='12322968769BEAD7C4AB5C65384F364B', secret='/xxyEx014DqvqLZSdhF7cxwV2TFotUqFyYEgeVZ3')
shiny::runApp('shiny/Appproject1')
shiny::runApp('shiny/Appbmi')
deployApp(Appbmi)
shiny::runApp('shiny/Appbmi')
deployApp('shiny/Appbmi')
shiny::runApp('shiny/Appbmi')
shiny::runApp('shiny/Appbmi')
library(shinyapps)
library(shinyapps)
shiny::runApp('shiny/Appbmi')
shiny::runApp('shiny/Appbmi')
deployApp('shiny/Appbmi')
shiny::runApp('shiny/Appbmi')
1. Item 1
library("slidify", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("slidifyLibraries", lib.loc="C:/Program Files/R/R-3.1.1/library")
author(projdeck)
getwd()
setwd("C:/Users/KVS/Documents/shiny")
author('projdeck')
getwd()
slidify(index.rmd)
slidify('index.rmd')
slidify('index.rmd')
library("knitr", lib.loc="C:/Program Files/R/R-3.1.1/library")
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd', knit_deck = TRUE, return_page = FALSE,
save_payload = FALSE)
slidify('index.rmd', knit_deck = TRUE, return_page = FALSE,
save_payload = FALSE)
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
require(rCharts)
slidify('index.rmd')
c=(x=c(1987,1988,1989),y=c(250,500,600))
plot(x~ y)
x=c(1987,1988,1989)
y=c(250,500,600))
plot(x~ y)
x=c(1987,1988,1989)
y=c(250,500,600))
plot(x~ y)
x=c(1987,1988,1989)
y=c(250,500,600)
plot(x~ y)
co2levels=c(x=c(1987,1988,1989),y=c(250,500,600))
plot(co2levels)
co2levels=c(x=c(1987,1988,1989),y=c(250,500,600))
plot(x~y,co2levels)
plot(x~y )
plot(y~x )
require(rcharts)
require('rcharts')
detach("package:rCharts", unload=TRUE)
library("rCharts", lib.loc="C:/Program Files/R/R-3.1.1/library")
plot(y~x )
rplot(y~x )
co2levels=c(x=c(1987,1988,1989),y=c(250,500,600))
barchat(y~x)
co2levels=c(x=c(1987,1988,1989),y=c(250,500,600))
barchart(y~x)
co2levels=c(x=c(1987,1988,1989),y=c(250,500,600))
plot(y~x)
co2levels=c(x=c(1987,1988,1989),y=c(250,500,600))
plot(y~x )
slidify('index.rmd')
co2levels=c(x=c(1987,1988,1989),y = c(250,500,600))
plot(y~x )
year=c(1987,1988,1989)
co2 = c(250,500,600)
plot(co2~year )
year=c(1987,1988,1989)
co2 = c(250,500,600)
barplot(co2~year )
plot(co2~year)
plot(co2~year,type = "bar")
plot(co2~year,type = "line")
plot(co2~year,type = bar)
hist(co2~year)
barchart(co2~year)
barchart(co2)
his(co2)
hist(co2)
plot(co2)
plot(co2,year)
plot(year,co2)
plot(year,co2,type="p")
plot(year,co2,type="H")
image(year,co2)
year=c(1987,1988,1989)
co2 = c(250,500,600)
barplot(co2,year )
image(year,co2,xlab = "year")
image(year,co2,xlab = year)
barplot(co2,year )
barplot(co2,year,xlab = year )
require(datasets)
barplot(co2)
require(graphics)
barplot(co2)
require(graphics)
plot(co2,type = "s")
title(main = "co2 data set")
require(graphics)
plot(co2,type = "s")
title(main = "co2 data set")
manipulate(plot(1:x), x = slider(5, 10))
library("manipulate", lib.loc="C:/Program Files/R/R-3.1.1/library")
manipulate(plot(1:x), x = slider(5, 10))
plot(cars, xlim=c(x.min,x.max)),
x.min=slider(0,15),
x.max=slider(15,30))
plot(cars, xlim=c(x.min,x.max)), x.min=slider(0,15), x.max=slider(15,30))
plot(cars, xlim=c(10,100)), x.min=slider(0,15), x.max=slider(15,30))
require(graphics)
plot(co2)
title(main = "co2 data set")
plot(cars, xlim=c(0,100)), x.min=slider(0,15), x.max=slider(15,30))
library(rggobi)
install.packages("rggobi")
require(graphics)
plot(co2,par(mar=c(4, 4, 2, 0.5)))
title(main = "co2 data set")
require(graphics)
plot(co2,par(mar=c(4, 4, 2, 0.5)))
require(graphics)
plot(co2,par(mar=c(4, 4, 2, 0.5)))
require(graphics)
plot(co2)
require(graphics)
plot(co2,mar(5,5,5,5))
require(graphics)
plot(co2)
op <- par(mfrow = c(2, 2),pty = "s")
par(op)
library(rggobi)
g <- ggobi(mydata
install.packages("rggobi")
library("rggobi", lib.loc="C:/Program Files/R/R-3.1.1/library")
library(rggobi)
g <- ggobi(mydata)
attach(mydata)
mydata=c(x=c(1,2,3),y=c(10,50,25))
plot(x, y) # scatterplot
identify(x, y) # identify points
